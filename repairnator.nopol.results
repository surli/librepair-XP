nopolinfo #0
location: FailureLocation{className='org.nutz.mvc.testapp.adaptor.SimpleAdaptorTest', failingMethods=[org.nutz.mvc.testapp.adaptor.SimpleAdaptorTest#test_issue_543], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='expected:<1348416000000> but was:<1348437600000>', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='expected:<1348416000000> but was:<1348437600000>', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Sun Apr 16 01:43:10 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@3bffddff', projectTests=[org.nutz.mvc.testapp.adaptor.SimpleAdaptorTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='org.nutz.dao.test.normal.SimpleDaoTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.normal.SimpleDaoTest#test_query_2, org.nutz.dao.test.normal.SimpleDaoTest#test_issue_726, org.nutz.dao.test.normal.SimpleDaoTest#test_escape_char, org.nutz.dao.test.normal.SimpleDaoTest#test_issue_928, org.nutz.dao.test.normal.SimpleDaoTest#test_sql_pager, org.nutz.dao.test.normal.SimpleDaoTest#test_delete_records, org.nutz.dao.test.normal.SimpleDaoTest#test_count_by_condition, org.nutz.dao.test.normal.SimpleDaoTest#test_fetch_null_name, org.nutz.dao.test.normal.SimpleDaoTest#test_dynamic_migration, org.nutz.dao.test.normal.SimpleDaoTest#test_get_sql, org.nutz.dao.test.normal.SimpleDaoTest#test_insert_with_id, org.nutz.dao.test.normal.SimpleDaoTest#test_integer_object_column, org.nutz.dao.test.normal.SimpleDaoTest#test_chain_insert, org.nutz.dao.test.normal.SimpleDaoTest#test_issue_1235, org.nutz.dao.test.normal.SimpleDaoTest#test_xxx, org.nutz.dao.test.normal.SimpleDaoTest#test_insert_with, org.nutz.dao.test.normal.SimpleDaoTest#test_fetchLinks, org.nutz.dao.test.normal.SimpleDaoTest#test_simple_update, org.nutz.dao.test.normal.SimpleDaoTest#test_order_by, org.nutz.dao.test.normal.SimpleDaoTest#test_fetch_by_condition_in_special_char, org.nutz.dao.test.normal.SimpleDaoTest#test_daoex_update, org.nutz.dao.test.normal.SimpleDaoTest#new_nutdao_inside_trans, org.nutz.dao.test.normal.SimpleDaoTest#test_daos_ext_insert_without_null, org.nutz.dao.test.normal.SimpleDaoTest#test_count_with_entity, org.nutz.dao.test.normal.SimpleDaoTest#test_insert_special_chain, org.nutz.dao.test.normal.SimpleDaoTest#test_insert_ignore_null, org.nutz.dao.test.normal.SimpleDaoTest#test_count_groupby, org.nutz.dao.test.normal.SimpleDaoTest#test_table_exists, org.nutz.dao.test.normal.SimpleDaoTest#test_clear, org.nutz.dao.test.normal.SimpleDaoTest#test_create_error_class, org.nutz.dao.test.normal.SimpleDaoTest#test_cnd_andEX_orEX, org.nutz.dao.test.normal.SimpleDaoTest#test_record_treemap, org.nutz.dao.test.normal.SimpleDaoTest#test_delete_list, org.nutz.dao.test.normal.SimpleDaoTest#run_2_sqls_with_error, org.nutz.dao.test.normal.SimpleDaoTest#test_simple_fetch_record, org.nutz.dao.test.normal.SimpleDaoTest#test_delete_null_many, org.nutz.dao.test.normal.SimpleDaoTest#test_insert_readonly, org.nutz.dao.test.normal.SimpleDaoTest#test_cnd_emtry_in, org.nutz.dao.test.normal.SimpleDaoTest#test_migration, org.nutz.dao.test.normal.SimpleDaoTest#test_insert_chain_with_null, org.nutz.dao.test.normal.SimpleDaoTest#test_bean_uuid, org.nutz.dao.test.normal.SimpleDaoTest#test_issue_1179, org.nutz.dao.test.normal.SimpleDaoTest#test_clear_two_records, org.nutz.dao.test.normal.SimpleDaoTest#test_coldefine_len, org.nutz.dao.test.normal.SimpleDaoTest#test_issue_918, org.nutz.dao.test.normal.SimpleDaoTest#test_pojo_sql_params, org.nutz.dao.test.normal.SimpleDaoTest#test_daos_queryCount, org.nutz.dao.test.normal.SimpleDaoTest#test_dao_func, org.nutz.dao.test.normal.SimpleDaoTest#test_issue_1163, org.nutz.dao.test.normal.SimpleDaoTest#test_use_blob_clob, org.nutz.dao.test.normal.SimpleDaoTest#test_issue_1166, org.nutz.dao.test.normal.SimpleDaoTest#test_varchar_BigDecimal, org.nutz.dao.test.normal.SimpleDaoTest#test_issue_1168], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=106}
status: NOPATCH
dateEnd: Sun Apr 16 01:43:21 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@2b43f314', projectTests=[org.nutz.dao.test.normal.SimpleDaoTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #2
location: FailureLocation{className='org.nutz.dao.test.mapping.DynamicManyTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.mapping.DynamicManyTest#delete_links_partly, org.nutz.dao.test.mapping.DynamicManyTest#delete_null_field_links, org.nutz.dao.test.mapping.DynamicManyTest#delete_with_partly, org.nutz.dao.test.mapping.DynamicManyTest#delete_with, org.nutz.dao.test.mapping.DynamicManyTest#clear_links, org.nutz.dao.test.mapping.DynamicManyTest#update_links, org.nutz.dao.test.mapping.DynamicManyTest#fetch_null_field_links, org.nutz.dao.test.mapping.DynamicManyTest#delete_links, org.nutz.dao.test.mapping.DynamicManyTest#delete_null_field_links_partly, org.nutz.dao.test.mapping.DynamicManyTest#update_with, org.nutz.dao.test.mapping.DynamicManyTest#clear_null_field_links], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}], nbFailures=0, nbErrors=44}
status: NOPATCH
dateEnd: Sun Apr 16 01:43:31 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@3a8ead9', projectTests=[org.nutz.dao.test.mapping.DynamicManyTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #3
location: FailureLocation{className='org.nutz.dao.test.normal.QueryTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.normal.QueryTest#query_by_special_char2, org.nutz.dao.test.normal.QueryTest#test_fetcy_by_fieldfilter, org.nutz.dao.test.normal.QueryTest#test_query_by_fieldfilter, org.nutz.dao.test.normal.QueryTest#query_by_cri_equals_null, org.nutz.dao.test.normal.QueryTest#fetch_record, org.nutz.dao.test.normal.QueryTest#query_by_pager, org.nutz.dao.test.normal.QueryTest#query_by_special_char, org.nutz.dao.test.normal.QueryTest#query_records_pager_new, org.nutz.dao.test.normal.QueryTest#query_records_pager, org.nutz.dao.test.normal.QueryTest#fetch_by_name, org.nutz.dao.test.normal.QueryTest#query_by_like_ignorecase, org.nutz.dao.test.normal.QueryTest#query_records, org.nutz.dao.test.normal.QueryTest#query_by_wrap_null, org.nutz.dao.test.normal.QueryTest#query_by_long_range, org.nutz.dao.test.normal.QueryTest#query_by_like, org.nutz.dao.test.normal.QueryTest#query_by_map_idkeyset, org.nutz.dao.test.normal.QueryTest#query_by_map_namekeyset, org.nutz.dao.test.normal.QueryTest#query_by_int_range, org.nutz.dao.test.normal.QueryTest#test_record_to_entity, org.nutz.dao.test.normal.QueryTest#query_by_orderbyset, org.nutz.dao.test.normal.QueryTest#clear_by_int_range], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=42}
status: NOPATCH
dateEnd: Sun Apr 16 01:43:41 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@72ae1007', projectTests=[org.nutz.dao.test.normal.QueryTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #4
location: FailureLocation{className='org.nutz.dao.texp.CndTest', failingMethods=[], erroringMethods=[org.nutz.dao.texp.CndTest#test_other_op, org.nutz.dao.texp.CndTest#test_bracket, org.nutz.dao.texp.CndTest#test_in_by_str_array, org.nutz.dao.texp.CndTest#test_add_other_or_method_by_github_issuse_148, org.nutz.dao.texp.CndTest#test_order, org.nutz.dao.texp.CndTest#test_in_by_int_array, org.nutz.dao.texp.CndTest#test_is_null, org.nutz.dao.texp.CndTest#test_segment, org.nutz.dao.texp.CndTest#test_not_in, org.nutz.dao.texp.CndTest#test_from_obj, org.nutz.dao.texp.CndTest#test_obj_read_write, org.nutz.dao.texp.CndTest#test_is_not_null, org.nutz.dao.texp.CndTest#test_not_sql_group, org.nutz.dao.texp.CndTest#test_in_by_str_list, org.nutz.dao.texp.CndTest#test_equel, org.nutz.dao.texp.CndTest#test_like_in, org.nutz.dao.texp.CndTest#test_gt_like, org.nutz.dao.texp.CndTest#test_in_by_int_list], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=36}
status: NOPATCH
dateEnd: Sun Apr 16 01:43:51 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@5967f0ff', projectTests=[org.nutz.dao.texp.CndTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #5
location: FailureLocation{className='org.nutz.dao.test.normal.UpdateTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.normal.UpdateTest#test_update_with_pk_and_cnd, org.nutz.dao.test.normal.UpdateTest#batch_update_relation, org.nutz.dao.test.normal.UpdateTest#test_update_ignore_null, org.nutz.dao.test.normal.UpdateTest#fetch_by_name_ignorecase, org.nutz.dao.test.normal.UpdateTest#test_update_obj_with_readonly_field, org.nutz.dao.test.normal.UpdateTest#test_updateIgnoreNull, org.nutz.dao.test.normal.UpdateTest#test_update_self_plus, org.nutz.dao.test.normal.UpdateTest#test_update_with_age_incr, org.nutz.dao.test.normal.UpdateTest#update_with_null_links, org.nutz.dao.test.normal.UpdateTest#test_update_chain_and_cnd, org.nutz.dao.test.normal.UpdateTest#test_update_chain_and_cnd_by_in, org.nutz.dao.test.normal.UpdateTest#batch_update_partly, org.nutz.dao.test.normal.UpdateTest#test_updateIgnoreNull_width_default, org.nutz.dao.test.normal.UpdateTest#test_updateIgnoreNull_by_list, org.nutz.dao.test.normal.UpdateTest#batch_update_all], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=30}
status: NOPATCH
dateEnd: Sun Apr 16 01:44:01 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@10f535a6', projectTests=[org.nutz.dao.test.normal.UpdateTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #6
location: FailureLocation{className='org.nutz.dao.test.mapping.DynamicManyManyTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.mapping.DynamicManyManyTest#update_links, org.nutz.dao.test.mapping.DynamicManyManyTest#update_with, org.nutz.dao.test.mapping.DynamicManyManyTest#delete_with, org.nutz.dao.test.mapping.DynamicManyManyTest#clear_links, org.nutz.dao.test.mapping.DynamicManyManyTest#delete_with_partly, org.nutz.dao.test.mapping.DynamicManyManyTest#delete_links, org.nutz.dao.test.mapping.DynamicManyManyTest#delete_links_partly], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}], nbFailures=0, nbErrors=28}
status: NOPATCH
dateEnd: Sun Apr 16 01:44:11 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@139d7ced', projectTests=[org.nutz.dao.test.mapping.DynamicManyManyTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #7
location: FailureLocation{className='org.nutz.dao.test.normal.EachTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.normal.EachTest#each_by_loop, org.nutz.dao.test.normal.EachTest#query_records, org.nutz.dao.test.normal.EachTest#each_by_like_ignorecase, org.nutz.dao.test.normal.EachTest#each_by_map_namekeyset, org.nutz.dao.test.normal.EachTest#each_by_int_range, org.nutz.dao.test.normal.EachTest#each_by_long_range, org.nutz.dao.test.normal.EachTest#query_records_pager, org.nutz.dao.test.normal.EachTest#each_by_like, org.nutz.dao.test.normal.EachTest#each_by_map_idkeyset, org.nutz.dao.test.normal.EachTest#each_by_pager, org.nutz.dao.test.normal.EachTest#each_by_special_char, org.nutz.dao.test.normal.EachTest#each_by_orderbyset, org.nutz.dao.test.normal.EachTest#each_by_special_char2], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=26}
status: NOPATCH
dateEnd: Sun Apr 16 01:44:20 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@6068fe59', projectTests=[org.nutz.dao.test.normal.EachTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #8
location: FailureLocation{className='org.nutz.dao.test.entity.EntityParsingTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.entity.EntityParsingTest#eval_manys, org.nutz.dao.test.entity.EntityParsingTest#eval_id_name, org.nutz.dao.test.entity.EntityParsingTest#test_pk_multiple, org.nutz.dao.test.entity.EntityParsingTest#test_extends_tables_name, org.nutz.dao.test.entity.EntityParsingTest#eval_manys_with_null_field, org.nutz.dao.test.entity.EntityParsingTest#test_pk_id, org.nutz.dao.test.entity.EntityParsingTest#eval_manymany, org.nutz.dao.test.entity.EntityParsingTest#test_entity_with_two_id, org.nutz.dao.test.entity.EntityParsingTest#test_pk_name, org.nutz.dao.test.entity.EntityParsingTest#test_pk_order, org.nutz.dao.test.entity.EntityParsingTest#test_complex_pojo_without_db, org.nutz.dao.test.entity.EntityParsingTest#test_pk_and_name_in_same_pojo, org.nutz.dao.test.entity.EntityParsingTest#test_override_field], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=26}
status: NOPATCH
dateEnd: Sun Apr 16 01:44:29 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@5ddae4c5', projectTests=[org.nutz.dao.test.entity.EntityParsingTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #9
location: FailureLocation{className='org.nutz.dao.test.mapping.ManyTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.mapping.ManyTest#insert_links, org.nutz.dao.test.mapping.ManyTest#update_with, org.nutz.dao.test.mapping.ManyTest#fetch_null_field_links, org.nutz.dao.test.mapping.ManyTest#delete_null_field_links, org.nutz.dao.test.mapping.ManyTest#delete_links_partly, org.nutz.dao.test.mapping.ManyTest#delete_with, org.nutz.dao.test.mapping.ManyTest#delete_links, org.nutz.dao.test.mapping.ManyTest#update_links, org.nutz.dao.test.mapping.ManyTest#delete_null_field_links_partly, org.nutz.dao.test.mapping.ManyTest#delete_with_partly, org.nutz.dao.test.mapping.ManyTest#clear_null_field_links, org.nutz.dao.test.mapping.ManyTest#clear_links, org.nutz.dao.test.mapping.ManyTest#fetch_links], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=26}
status: NOPATCH
dateEnd: Sun Apr 16 01:44:39 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@40216e38', projectTests=[org.nutz.dao.test.mapping.ManyTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #10
location: FailureLocation{className='org.nutz.dao.test.mapping.OneTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.mapping.OneTest#update_with, org.nutz.dao.test.mapping.OneTest#clear_links_as_list, org.nutz.dao.test.mapping.OneTest#update_links_as_list, org.nutz.dao.test.mapping.OneTest#delete_with_as_list, org.nutz.dao.test.mapping.OneTest#delete_links_as_list, org.nutz.dao.test.mapping.OneTest#clear_links, org.nutz.dao.test.mapping.OneTest#fetch_links, org.nutz.dao.test.mapping.OneTest#update_with_as_list, org.nutz.dao.test.mapping.OneTest#fetch_links_as_list, org.nutz.dao.test.mapping.OneTest#update_links, org.nutz.dao.test.mapping.OneTest#delete_links, org.nutz.dao.test.mapping.OneTest#delete_with, org.nutz.dao.test.mapping.OneTest#test_insert_with_one_id], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=26}
status: NOPATCH
dateEnd: Sun Apr 16 01:44:48 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@3cae770e', projectTests=[org.nutz.dao.test.mapping.OneTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #11
location: FailureLocation{className='org.nutz.dao.test.mapping.DynamicOneTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.mapping.DynamicOneTest#delete_with, org.nutz.dao.test.mapping.DynamicOneTest#fetch_links, org.nutz.dao.test.mapping.DynamicOneTest#delete_links, org.nutz.dao.test.mapping.DynamicOneTest#update_links, org.nutz.dao.test.mapping.DynamicOneTest#update_with, org.nutz.dao.test.mapping.DynamicOneTest#clear_links], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}], nbFailures=0, nbErrors=24}
status: NOPATCH
dateEnd: Sun Apr 16 01:44:56 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@3eba2df9', projectTests=[org.nutz.dao.test.mapping.DynamicOneTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #12
location: FailureLocation{className='org.nutz.dao.test.sqls.SqlTemplateTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.sqls.SqlTemplateTest#testQueryForInt, org.nutz.dao.test.sqls.SqlTemplateTest#testQueryEntity2, org.nutz.dao.test.sqls.SqlTemplateTest#testQueryEntity1, org.nutz.dao.test.sqls.SqlTemplateTest#testQueryForRecord, org.nutz.dao.test.sqls.SqlTemplateTest#testUpdate, org.nutz.dao.test.sqls.SqlTemplateTest#testQueryForObjectEntityOfT, org.nutz.dao.test.sqls.SqlTemplateTest#testQueryForLong, org.nutz.dao.test.sqls.SqlTemplateTest#testQueryForObjectClassOfT, org.nutz.dao.test.sqls.SqlTemplateTest#testSqlInExp, org.nutz.dao.test.sqls.SqlTemplateTest#testQueryForList, org.nutz.dao.test.sqls.SqlTemplateTest#testQueryRecords, org.nutz.dao.test.sqls.SqlTemplateTest#testBatchUpdate], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=24}
status: NOPATCH
dateEnd: Sun Apr 16 01:45:06 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@4ebea736', projectTests=[org.nutz.dao.test.sqls.SqlTemplateTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #13
location: FailureLocation{className='org.nutz.dao.test.sqls.CustomizedSqlsTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.sqls.CustomizedSqlsTest#test_dynamic_insert, org.nutz.dao.test.sqls.CustomizedSqlsTest#test_escape_varname_test, org.nutz.dao.test.sqls.CustomizedSqlsTest#test_statice_null_field, org.nutz.dao.test.sqls.CustomizedSqlsTest#test_query_without_entity, org.nutz.dao.test.sqls.CustomizedSqlsTest#test_query_by_limit, org.nutz.dao.test.sqls.CustomizedSqlsTest#test_issue_1176, org.nutz.dao.test.sqls.CustomizedSqlsTest#test_dynamic_query, org.nutz.dao.test.sqls.CustomizedSqlsTest#test_in, org.nutz.dao.test.sqls.CustomizedSqlsTest#test_cnd_pager], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=18}
status: NOPATCH
dateEnd: Sun Apr 16 01:45:15 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@52ba834b', projectTests=[org.nutz.dao.test.sqls.CustomizedSqlsTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #14
location: FailureLocation{className='org.nutz.dao.test.mapping.ManyManyTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.mapping.ManyManyTest#fetch_links, org.nutz.dao.test.mapping.ManyManyTest#clear_links, org.nutz.dao.test.mapping.ManyManyTest#delete_with, org.nutz.dao.test.mapping.ManyManyTest#delete_links, org.nutz.dao.test.mapping.ManyManyTest#update_links, org.nutz.dao.test.mapping.ManyManyTest#update_with, org.nutz.dao.test.mapping.ManyManyTest#delete_with_partly, org.nutz.dao.test.mapping.ManyManyTest#delete_links_partly], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=16}
status: NOPATCH
dateEnd: Sun Apr 16 01:45:24 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@7f6698f4', projectTests=[org.nutz.dao.test.mapping.ManyManyTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #15
location: FailureLocation{className='org.nutz.dao.test.normal.PkTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.normal.PkTest#test_error_ann_name, org.nutz.dao.test.normal.PkTest#test_delete_by_pks, org.nutz.dao.test.normal.PkTest#test_fetch_by_pks, org.nutz.dao.test.normal.PkTest#test_error_ann_id, org.nutz.dao.test.normal.PkTest#test_update, org.nutz.dao.test.normal.PkTest#test_fetch_by_object, org.nutz.dao.test.normal.PkTest#test_delete_by_object], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=14}
status: NOPATCH
dateEnd: Sun Apr 16 01:45:33 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@6f9989ab', projectTests=[org.nutz.dao.test.normal.PkTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #16
location: FailureLocation{className='org.nutz.dao.test.normal.CreateTableWithCommentTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.normal.CreateTableWithCommentTest#createTableInMySQL, org.nutz.dao.test.normal.CreateTableWithCommentTest#createTableInHSQL, org.nutz.dao.test.normal.CreateTableWithCommentTest#createTableInPostgersqlAndH2, org.nutz.dao.test.normal.CreateTableWithCommentTest#createTableInDB2, org.nutz.dao.test.normal.CreateTableWithCommentTest#createTableInOracle, org.nutz.dao.test.normal.CreateTableWithCommentTest#createTableInSqlServer], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=12}
status: NOPATCH
dateEnd: Sun Apr 16 01:45:42 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@6aefad59', projectTests=[org.nutz.dao.test.normal.CreateTableWithCommentTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #17
location: FailureLocation{className='org.nutz.dao.test.normal.SupportedFieldTypeTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.normal.SupportedFieldTypeTest#insert_timestamp_field, org.nutz.dao.test.normal.SupportedFieldTypeTest#check_if_support_all_normal_types, org.nutz.dao.test.normal.SupportedFieldTypeTest#insert_char_field, org.nutz.dao.test.normal.SupportedFieldTypeTest#check_insert_null_timestamp_field, org.nutz.dao.test.normal.SupportedFieldTypeTest#check_update_sqlTimestamp, org.nutz.dao.test.normal.SupportedFieldTypeTest#check_for_sqlTime], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=12}
status: NOPATCH
dateEnd: Sun Apr 16 01:45:51 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@377d7f13', projectTests=[org.nutz.dao.test.normal.SupportedFieldTypeTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #18
location: FailureLocation{className='org.nutz.dao.test.normal.FieldFilterTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.normal.FieldFilterTest#test_query_by_filter, org.nutz.dao.test.normal.FieldFilterTest#test_insert_by_filter, org.nutz.dao.test.normal.FieldFilterTest#test_update_by_filter, org.nutz.dao.test.normal.FieldFilterTest#test_filter_no_field_match, org.nutz.dao.test.normal.FieldFilterTest#test_select_by_filter], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=10}
status: NOPATCH
dateEnd: Sun Apr 16 01:46:00 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@dd9392c', projectTests=[org.nutz.dao.test.normal.FieldFilterTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #19
location: FailureLocation{className='org.nutz.dao.test.exec.SimpleDaoExecTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.exec.SimpleDaoExecTest#test_simple_mysql_exec2, org.nutz.dao.test.exec.SimpleDaoExecTest#test_simple_h2_call, org.nutz.dao.test.exec.SimpleDaoExecTest#test_exec_out, org.nutz.dao.test.exec.SimpleDaoExecTest#test_simple_mysql_exec], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Sun Apr 16 01:46:09 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@333298ff', projectTests=[org.nutz.dao.test.exec.SimpleDaoExecTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #20
location: FailureLocation{className='org.nutz.dao.test.normal.BinaryDaoTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.normal.BinaryDaoTest#test_blob, org.nutz.dao.test.normal.BinaryDaoTest#test_simple_byte_array, org.nutz.dao.test.normal.BinaryDaoTest#test_big_blob, org.nutz.dao.test.normal.BinaryDaoTest#test_clob], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Sun Apr 16 01:46:18 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@23c1c2bc', projectTests=[org.nutz.dao.test.normal.BinaryDaoTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #21
location: FailureLocation{className='org.nutz.dao.test.normal.InsertTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.normal.InsertTest#test_fastinsert_as_rollback, org.nutz.dao.test.normal.InsertTest#test_insert_by_fieldfilter, org.nutz.dao.test.normal.InsertTest#test_insert_by_el, org.nutz.dao.test.normal.InsertTest#test_fastInsert_rollback_jdbc], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=8}
status: NOPATCH
dateEnd: Sun Apr 16 01:46:27 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@13d8ccaa', projectTests=[org.nutz.dao.test.normal.InsertTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #22
location: FailureLocation{className='org.nutz.trans.TransLevelTest', failingMethods=[], erroringMethods=[org.nutz.trans.TransLevelTest#testSerializable, org.nutz.trans.TransLevelTest#testReadCommitted, org.nutz.trans.TransLevelTest#testTransLevel], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='java.lang.RuntimeException', failureDetail='nutz-test.properties Not FOUND!!! tmpl.nutz-test.properties is a example.', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Sun Apr 16 01:46:37 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@16217e09', projectTests=[org.nutz.trans.TransLevelTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #23
location: FailureLocation{className='org.nutz.trans.SimpleTransTest', failingMethods=[], erroringMethods=[org.nutz.trans.SimpleTransTest#test_batch_update_rollback, org.nutz.trans.SimpleTransTest#test_issue312, org.nutz.trans.SimpleTransTest#test_update_rollback], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Sun Apr 16 01:46:46 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@34536c57', projectTests=[org.nutz.trans.SimpleTransTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #24
location: FailureLocation{className='org.nutz.trans.BatchTransTest', failingMethods=[], erroringMethods=[org.nutz.trans.BatchTransTest#try_insert_static_objects_by_many_many, org.nutz.trans.BatchTransTest#try_insert_multiple_companys, org.nutz.trans.BatchTransTest#try_insert_multiple_dynamic_objects], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Sun Apr 16 01:46:55 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@5cd4076c', projectTests=[org.nutz.trans.BatchTransTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #25
location: FailureLocation{className='org.nutz.trans.TransactionTest', failingMethods=[], erroringMethods=[org.nutz.trans.TransactionTest#testNestedRollback, org.nutz.trans.TransactionTest#testNestedCommit, org.nutz.trans.TransactionTest#testRollback], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Sun Apr 16 01:47:04 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@2b510bd4', projectTests=[org.nutz.trans.TransactionTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #26
location: FailureLocation{className='org.nutz.dao.test.mapping.LinksGeneralTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.mapping.LinksGeneralTest#fetch_all_links, org.nutz.dao.test.mapping.LinksGeneralTest#test_fetchLinks_cnd, org.nutz.dao.test.mapping.LinksGeneralTest#insert_links_with_exception], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Sun Apr 16 01:47:13 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@5e869ce0', projectTests=[org.nutz.dao.test.mapping.LinksGeneralTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #27
location: FailureLocation{className='org.nutz.dao.test.smoke.BatchInsertTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.smoke.BatchInsertTest#test_insert_3_pets, org.nutz.dao.test.smoke.BatchInsertTest#test_insert_2_pets_by_chain_to_map, org.nutz.dao.test.smoke.BatchInsertTest#test_fast_insert_2_pets_by_chain_to_map], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Sun Apr 16 01:47:22 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@47d19eae', projectTests=[org.nutz.dao.test.smoke.BatchInsertTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #28
location: FailureLocation{className='org.nutz.dao.texp.ChainTest', failingMethods=[], erroringMethods=[org.nutz.dao.texp.ChainTest#test_chain_to_object, org.nutz.dao.texp.ChainTest#test_chain_from_map, org.nutz.dao.texp.ChainTest#test_chain_from_object], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=6}
status: NOPATCH
dateEnd: Sun Apr 16 01:47:32 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@b271324', projectTests=[org.nutz.dao.texp.ChainTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #29
location: FailureLocation{className='org.nutz.dao.test.normal.CreateDropTableTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.normal.CreateDropTableTest#createTableTimestampFieldDefaultNullInMySQL, org.nutz.dao.test.normal.CreateDropTableTest#createDropTableInOracle], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Sun Apr 16 01:47:41 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@2caeeea', projectTests=[org.nutz.dao.test.normal.CreateDropTableTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #30
location: FailureLocation{className='org.nutz.dao.test.normal.AutoGenerateValueTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.normal.AutoGenerateValueTest#test_simple, org.nutz.dao.test.normal.AutoGenerateValueTest#test_var_in_prev], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=4}
status: NOPATCH
dateEnd: Sun Apr 16 01:47:50 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@75335cb6', projectTests=[org.nutz.dao.test.normal.AutoGenerateValueTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #31
location: FailureLocation{className='org.nutz.dao.test.smoke.TableNameTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.smoke.TableNameTest#test_insert_DPet], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sun Apr 16 01:47:59 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@4252eaef', projectTests=[org.nutz.dao.test.smoke.TableNameTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #32
location: FailureLocation{className='org.nutz.dao.test.normal.BoneCP_Test', failingMethods=[], erroringMethods=[org.nutz.dao.test.normal.BoneCP_Test#clear_links], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sun Apr 16 01:48:09 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@7873ae73', projectTests=[org.nutz.dao.test.normal.BoneCP_Test], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #33
location: FailureLocation{className='org.nutz.dao.test.mapping.Issue1155Test', failingMethods=[], erroringMethods=[org.nutz.dao.test.mapping.Issue1155Test#test_issue_1155], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sun Apr 16 01:48:18 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@19e73459', projectTests=[org.nutz.dao.test.mapping.Issue1155Test], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #34
location: FailureLocation{className='org.nutz.dao.test.mapping.Issue1206Test', failingMethods=[], erroringMethods=[org.nutz.dao.test.mapping.Issue1206Test#test_issue_1206], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sun Apr 16 01:48:27 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@59e83151', projectTests=[org.nutz.dao.test.mapping.Issue1206Test], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #35
location: FailureLocation{className='org.nutz.dao.util.DaoUpTest', failingMethods=[], erroringMethods=[org.nutz.dao.util.DaoUpTest#org.nutz.dao.util.DaoUpTest], failures=[FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}, FailureType{failureName='java.lang.NullPointerException:', failureDetail='null', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sun Apr 16 01:48:36 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@a1c91a', projectTests=[org.nutz.dao.util.DaoUpTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #36
location: FailureLocation{className='org.nutz.dao.test.mapping.RecordDaoTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.mapping.RecordDaoTest#test_insert_with_autoinc_id], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sun Apr 16 01:48:44 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@767f4828', projectTests=[org.nutz.dao.test.mapping.RecordDaoTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #37
location: FailureLocation{className='org.nutz.dao.test.mapping.Issue338Test', failingMethods=[], erroringMethods=[org.nutz.dao.test.mapping.Issue338Test#test_deleteWith_many], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sun Apr 16 01:48:53 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@7f806b00', projectTests=[org.nutz.dao.test.mapping.Issue338Test], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #38
location: FailureLocation{className='org.nutz.dao.test.normal.DaoRecordTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.normal.DaoRecordTest#test_null_timestamp], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sun Apr 16 01:49:01 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@781bfe8f', projectTests=[org.nutz.dao.test.normal.DaoRecordTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #39
location: FailureLocation{className='org.nutz.dao.test.normal.psql.PsqlArrayTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.normal.psql.PsqlArrayTest#crud], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sun Apr 16 01:49:10 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@64d23561', projectTests=[org.nutz.dao.test.normal.psql.PsqlArrayTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #40
location: FailureLocation{className='org.nutz.dao.test.entity.DynamicEntityParsingTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.entity.DynamicEntityParsingTest#tank_many_many_link_test], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sun Apr 16 01:49:19 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@4ef58484', projectTests=[org.nutz.dao.test.entity.DynamicEntityParsingTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #41
location: FailureLocation{className='org.nutz.dao.test.normal.psql.PsqlJsonTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.normal.psql.PsqlJsonTest#crud], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sun Apr 16 01:49:28 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@466d55bc', projectTests=[org.nutz.dao.test.normal.psql.PsqlJsonTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #42
location: FailureLocation{className='org.nutz.dao.test.sqls.CallbackTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.sqls.CallbackTest#test_fetchBooleanCallback], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sun Apr 16 01:49:36 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@3bd3df73', projectTests=[org.nutz.dao.test.sqls.CallbackTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #43
location: FailureLocation{className='org.nutz.dao.test.normal.mysql.MysqlJsonTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.normal.mysql.MysqlJsonTest#crud], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}, FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=2}
status: NOPATCH
dateEnd: Sun Apr 16 01:49:44 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@ce9bf44', projectTests=[org.nutz.dao.test.normal.mysql.MysqlJsonTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #44
location: FailureLocation{className='org.nutz.dao.test.normal.CustomizedFieldNameTest', failingMethods=[], erroringMethods=[org.nutz.dao.test.normal.CustomizedFieldNameTest#test_insert_update_chain_with_another_column_name], failures=[FailureType{failureName='org.nutz.ioc.IocException', failureDetail='IocBean[dao -> dataSource] throw Exception when creating', isError=true}], nbFailures=0, nbErrors=1}
status: NOPATCH
dateEnd: Sun Apr 16 01:49:52 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[/root/workspace/nutzam/nutz/220445915/src], projectClasspath='[Ljava.net.URL;@5c90d892', projectTests=[org.nutz.dao.test.normal.CustomizedFieldNameTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



