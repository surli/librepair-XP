{
  "totalNumberSkippingTests": 9,
  "step-durations": {
    "CheckoutBuild": 0,
    "": 0,
    "ComputeClasspath": 3,
    "CloneRepository": 5,
    "NopolRepair": 432,
    "ResolveDependency": 181,
    "TestProject": 8999,
    "BuildProject": 118,
    "PushIncriminatedBuild": 5,
    "ComputeSourceDir": 0,
    "SquashRepository": 3
  },
  "nbLibraries": 62,
  "workspace": "./workspace",
  "totalNumberErroringTests": 874,
  "repo": "spring-projects/spring-data-mongodb",
  "bugCommit": "https://github.com/spring-projects/spring-data-mongodb/compare/8f5091b2d5e1...859d9d5d831f",
  "failingModule": "/root/workspace/spring-projects/spring-data-mongodb/220847584/spring-data-mongodb",
  "buildid": 220847584,
  "totalNumberFailingTests": 0,
  "error-types": [
    "com.mongodb.MongoTimeoutException",
    "java.lang.IllegalStateException",
    "org.springframework.dao.DataAccessResourceFailureException",
    "skipped"
  ],
  "totalNumberRunningTests": 2156,
  "failing-test-cases": [
    {
      "className": "org.springframework.data.mongodb.core.geo.GeoSpatial2DTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.geo.GeoSpatial2DTests#indexInfoIsCorrect",
        "org.springframework.data.mongodb.core.geo.GeoSpatial2DTests#nearPoint",
        "org.springframework.data.mongodb.core.geo.GeoSpatial2DTests#geoNear",
        "org.springframework.data.mongodb.core.geo.GeoSpatial2DTests#withinBox",
        "org.springframework.data.mongodb.core.geo.GeoSpatial2DTests#withinPolygon",
        "org.springframework.data.mongodb.core.geo.GeoSpatial2DTests#mapsQueryContainedInNearQuery",
        "org.springframework.data.mongodb.core.geo.GeoSpatial2DTests#nearSphere",
        "org.springframework.data.mongodb.core.geo.GeoSpatial2DTests#withinCenterSphere",
        "org.springframework.data.mongodb.core.geo.GeoSpatial2DTests#withinCenter"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 9
    },
    {
      "className": "org.springframework.data.mongodb.repository.cdi.CdiExtensionIntegrationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.repository.cdi.CdiExtensionIntegrationTests#bootstrapsRepositoryCorrectly"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.data.mongodb.core.query.TextQueryTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.query.TextQueryTests#shouldApplyPhraseCorrectly",
        "org.springframework.data.mongodb.core.query.TextQueryTests#shouldInlcudeScoreCorreclty",
        "org.springframework.data.mongodb.core.query.TextQueryTests#shouldApplyPaginationCorrectly",
        "org.springframework.data.mongodb.core.query.TextQueryTests#shouldFindTextInAnyLanguage",
        "org.springframework.data.mongodb.core.query.TextQueryTests#shouldOnlyFindTextInSpecificLanguage",
        "org.springframework.data.mongodb.core.query.TextQueryTests#shouldOnlyFindDocumentsMatchingAnyWordOfGivenQuery",
        "org.springframework.data.mongodb.core.query.TextQueryTests#shouldReturnEmptyListWhenNoDocumentsMatchGivenPhrase",
        "org.springframework.data.mongodb.core.query.TextQueryTests#shouldNotFindDocumentsWhenQueryDoesNotMatchAnyDocumentInIndex",
        "org.springframework.data.mongodb.core.query.TextQueryTests#shouldApplySortByScoreCorrectly",
        "org.springframework.data.mongodb.core.query.TextQueryTests#shouldNotFindDocumentsWithNegatedTerms"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 20
    },
    {
      "className": "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests",
      "failingMethods": [
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#shouldExecuteFindOnDbRefCorrectly"
      ],
      "erroringMethods": [
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#deletesPersonCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#shouldAllowReturningJava8StreamInCustomQuery",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#shouldFindByFirstnameForSpELExpressionWithParameterIndexOnly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#deleteByUsingAnnotatedQueryShouldReturnNumberOfDocumentsRemovedIfReturnTypeIsLong",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPersonByShippingAddressesCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPersonByAddressCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#readsDocumentsWithNestedPolymorphismCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPeopleByZipCode",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#existsWorksCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPersonsByFirstnameAsArray",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPersonsByFirstnameLike",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#considersSortForAnnotatedQuery",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#deleteByShouldReturnZeroInCaseNoDocumentHasBeenRemovedAndReturnTypeIsNumber",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPersonInAgeRangeCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#shouldFindByFirstnameAndCurrentUserWithCustomQuery",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#bindsDateParameterForManuallyDefinedQueryCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#deleteByShouldRemoveElementsMatchingDerivedQuery",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#bindsDateParameterForAfterPredicateCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findByCustomQueryFirstnamesInListAndLastname",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#executesGeoNearQueryForResultsCorrectlyWhenGivenMinAndMaxDistance",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#shouldFindByFirstnameForSpELExpressionWithParameterVariableOnly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#executesPagedFinderCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#sliceShouldTraverseElementsWithoutSkippingOnes",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#deleteByShouldReturnNumberOfDocumentsRemovedIfReturnTypeIsLong",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsAllMusicians",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#executesDerivedCountProjectionToInt",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#executesGeoPageQueryForResultsCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPersonsByFirstname",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findByFirstNameIgnoreCaseWithNull",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPeopleUsingNotPredicate",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findByFirstnameLikeWithNull",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPeopleByLastnameAndOrdersCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#gettingNonFirstPageWorksWithoutLimitBeingSet",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#appliesStaticAndDynamicSorting",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPeopleByzipCodePredicate",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPeopleByLocationWithinBox",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPeopleBySexPaginated",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPersonById",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsSliceOfPersons",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#shouldLimitCollectionQueryToMaxResultsWhenPresent",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#bindsDateParameterToBeforePredicateCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPeopleByNamedQuery",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findAllByExampleShouldResolveStuffCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#executesGeoPageQueryForWithPageRequestForPageInBetween",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findByFirstnameNotIgnoreCase",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#executesGeoPageQueryForWithPageRequestForJustOneElement",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#shouldSupportSortingWithQSort",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#shouldLimitPagedQueryWhenPageRequestExceedsUpperBoundary",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPersonsByFirstnameNotContains",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#rejectsDuplicateEmailAddressOnSave",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#executesDerivedStartsWithQueryCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#shouldBindPlaceholdersUsedAsKeysCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPeopleByLocationNear",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findUsingAnnotatedQueryOnDBRef",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPeopleByLocationWithinPolygon",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPeopleByQueryDslLastnameSpec",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findByNestedPropertyInCollectionShouldFindMatchingDocuments",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findBySkillsNotContains",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsAllWithGivenIds",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#shouldFindPersonsWhenUsingQueryDslPerdicatedOnIdProperty",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#returnsOrderedResultsForQuerydslOrderSpecifier",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findByFirstnameContainingIgnoreCase",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#shouldNotLimitPagedQueryWhenPageRequestWithinBounds",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#executesDerivedCountProjection",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findByFirstnameStartingWithIgnoreCase",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#executesAndQueryCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findByFirstnameEndingWithIgnoreCase",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPagedPeopleByPredicate",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPeopleByLocationWithinCircle",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#shouldSupportSortingWithQSortByQueryDslOrderSpecifier",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#adjustedWllKnownFindAllMethodShouldReturnAnEmptyList",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPeopleBySexCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#executesSingleEntityQueryWithProjectionCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#executesGeoPageQueryForWithPageRequestForPageAtTheEnd",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findByExampleShouldResolveStuffCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#adjustedWellKnownPagedFindAllMethodShouldReturnOnlyTheUserWithFirstnameOliverAugust",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#executesQueryWithDBRefReferenceCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#shouldReturnEmptyWhenPageRequestedPageIsTotallyOutOfScopeForLimit",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#deletesPersonByIdCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findByFirstNameIgnoreCase",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#shouldSupportSortingByQueryDslOrderSpecifier",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#bindsDateParameterForLessThanPredicateCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#executesGeoNearQueryForResultsCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#executesDerivedEndsWithQueryCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#executesAnnotatedCountProjection",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPeopleByLocationNearUsingGeoJsonType",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findBySkillsContains",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#executesGeoPageQueryForWithPageRequestForJustOneElementEmptyPage",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#deleteByShouldReturnListOfDeletedElementsWhenRetunTypeIsCollectionLike",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#bindsDateParameterForGreaterThanPredicateCorrectly",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findByCustomQueryLastnameAndStreetInList",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#deleteByShouldReturnEmptyListInCaseNoDocumentHasBeenRemovedAndReturnTypeIsCollectionLike",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPersonsByLastname",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#findsPagedPersons",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#deleteByUsingAnnotatedQueryShouldReturnListOfDeletedElementsWhenRetunTypeIsCollectionLike",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#deleteByUsingAnnotatedQueryShouldRemoveElementsMatchingDerivedQuery",
        "org.springframework.data.mongodb.repository.RedeclaringRepositoryMethodsTests#executesPagedFinderWithAnnotatedQueryCorrectly"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "skipped",
          "failureDetail": "skipped",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 1,
      "nbErrors": 97
    },
    {
      "className": "org.springframework.data.mongodb.core.MongoDbUtilsIntegrationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.MongoDbUtilsIntegrationTests#org.springframework.data.mongodb.core.MongoDbUtilsIntegrationTests",
        "org.springframework.data.mongodb.core.MongoDbUtilsIntegrationTests#authenticatesCorrectlyWithAuthenticationDB",
        "org.springframework.data.mongodb.core.MongoDbUtilsIntegrationTests#authenticatesCorrectlyInMultithreadedEnvironment"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "org.springframework.data.mongodb.repository.RepositoryIndexCreationIntegrationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.repository.RepositoryIndexCreationIntegrationTests#testname"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests#findByWithSortByScoreViaPageRequestTriggersSortingCorrectly",
        "org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests#findAllByTextCriteriaShouldReturnMatchingDocuments",
        "org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests#derivedSortForTextScorePropertyWorksCorrectly",
        "org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests#derivedFinderMethodWithoutFullTextShouldNoCauseTroubleWhenHavingEntityWithTextScoreProperty",
        "org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests#derivedFinderWithTextCriteriaReturnsCorrectResult",
        "org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests#findAllByTextCriteriaWithSortWorksCorrectly",
        "org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests#findByWithPaginationWorksCorrectlyWhenUsingTextCriteria",
        "org.springframework.data.mongodb.repository.MongoRepositoryTextSearchIntegrationTests#findByWithSortViaPageRequestIgnoresTextScoreWhenSortedByOtherProperty"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "org.springframework.data.mongodb.core.index.IndexingIntegrationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.index.IndexingIntegrationTests#createsIndexFromMetaAnnotation",
        "org.springframework.data.mongodb.core.index.IndexingIntegrationTests#createsIndexWithFieldName"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "org.springframework.data.mongodb.core.mapping.MappingTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.mapping.MappingTests#testPersonMapProperty",
        "org.springframework.data.mongodb.core.mapping.MappingTests#testWriteEntity",
        "org.springframework.data.mongodb.core.mapping.MappingTests#readsAndWritesDBRefsCorrectly",
        "org.springframework.data.mongodb.core.mapping.MappingTests#testGeneratedId",
        "org.springframework.data.mongodb.core.mapping.MappingTests#testUniqueIndex",
        "org.springframework.data.mongodb.core.mapping.MappingTests#testMultiDimensionalArrayProperties",
        "org.springframework.data.mongodb.core.mapping.MappingTests#testQueryUpdate",
        "org.springframework.data.mongodb.core.mapping.MappingTests#testIndexesCreatedInRightCollection",
        "org.springframework.data.mongodb.core.mapping.MappingTests#testNoMappingAnnotationsUsingLongAsId",
        "org.springframework.data.mongodb.core.mapping.MappingTests#testOrQuery",
        "org.springframework.data.mongodb.core.mapping.MappingTests#testCustomCollectionInList",
        "org.springframework.data.mongodb.core.mapping.MappingTests#testMultiDimensionalCollectionProperties",
        "org.springframework.data.mongodb.core.mapping.MappingTests#testPrimitivesAndCustomCollectionName",
        "org.springframework.data.mongodb.core.mapping.MappingTests#testNoMappingAnnotationsUsingIntAsId",
        "org.springframework.data.mongodb.core.mapping.MappingTests#shouldMapFieldsOfIterableEntity",
        "org.springframework.data.mongodb.core.mapping.MappingTests#testPersonWithNullProperties",
        "org.springframework.data.mongodb.core.mapping.MappingTests#testUpsert",
        "org.springframework.data.mongodb.core.mapping.MappingTests#testPersonWithLongDBRef",
        "org.springframework.data.mongodb.core.mapping.MappingTests#testPersonPojo",
        "org.springframework.data.mongodb.core.mapping.MappingTests#supportExcludeDbRefAssociation",
        "org.springframework.data.mongodb.core.mapping.MappingTests#testNoMappingAnnotationsUsingStringAsId",
        "org.springframework.data.mongodb.core.mapping.MappingTests#testPrimitivesAsIds",
        "org.springframework.data.mongodb.core.mapping.MappingTests#testDbRef",
        "org.springframework.data.mongodb.core.mapping.MappingTests#testPersonWithCustomIdName"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 48
    },
    {
      "className": "org.springframework.data.mongodb.core.mapreduce.GroupByTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.mapreduce.GroupByTests#simpleGroupWithQueryAndFunctionsAsResources",
        "org.springframework.data.mongodb.core.mapreduce.GroupByTests#simpleGroupWithKeyFunction",
        "org.springframework.data.mongodb.core.mapreduce.GroupByTests#multipleKeyCreation",
        "org.springframework.data.mongodb.core.mapreduce.GroupByTests#simpleGroupFunction",
        "org.springframework.data.mongodb.core.mapreduce.GroupByTests#simpleGroupWithFunctionsAsResources",
        "org.springframework.data.mongodb.core.mapreduce.GroupByTests#keyFunctionCreation",
        "org.springframework.data.mongodb.core.mapreduce.GroupByTests#singleKeyCreation"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 14
    },
    {
      "className": "org.springframework.data.mongodb.gridfs.GridFsTemplateIntegrationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.gridfs.GridFsTemplateIntegrationTests#writesMetadataCorrectly",
        "org.springframework.data.mongodb.gridfs.GridFsTemplateIntegrationTests#getResourceShouldReturnNullForNonExistingResource",
        "org.springframework.data.mongodb.gridfs.GridFsTemplateIntegrationTests#storesAndFindsSimpleDocumentWithMetadataObject",
        "org.springframework.data.mongodb.gridfs.GridFsTemplateIntegrationTests#considersSortWhenQueryingFiles",
        "org.springframework.data.mongodb.gridfs.GridFsTemplateIntegrationTests#findsFilesByResourcePattern",
        "org.springframework.data.mongodb.gridfs.GridFsTemplateIntegrationTests#storesAndFindsSimpleDocument",
        "org.springframework.data.mongodb.gridfs.GridFsTemplateIntegrationTests#storesAndFindsSimpleDocumentWithMetadataDBObject",
        "org.springframework.data.mongodb.gridfs.GridFsTemplateIntegrationTests#queryingWithNullQueryReturnsAllFiles",
        "org.springframework.data.mongodb.gridfs.GridFsTemplateIntegrationTests#marshalsComplexMetadata",
        "org.springframework.data.mongodb.gridfs.GridFsTemplateIntegrationTests#storesContentType",
        "org.springframework.data.mongodb.gridfs.GridFsTemplateIntegrationTests#findsFilesByResourceLocation"
      ],
      "failures": [
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 11
    },
    {
      "className": "org.springframework.data.mongodb.core.index.TextIndexTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.index.TextIndexTests#indexInfoShouldHaveBeenCreatedCorrectly"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.springframework.data.mongodb.core.aggregation.AggregationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#aliasesNestedFieldInProjectionImmediately",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#arithmenticOperatorsInProjectionExample",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#complexAggregationFrameworkUsageLargestAndSmallestCitiesByState",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#expressionsInProjectionExample",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#shouldRetrieveDateTimeFragementsCorrectly",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#shouldLookupPeopleCorectly",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#shouldSupportReturningCurrentAggregationRoot",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#shouldAggregate",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#returnFiveMostCommonLikesAggregationFrameworkExample",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#shouldPerformStringProjectionOperatorsCorrectly",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#expressionsInProjectionExampleShowcase",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#shouldAggregateOrderDataToAnInvoice",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#returnFiveMostCommonLikesAggregationFrameworkExampleWithSortOnDiskOptionEnabled",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#shouldHandleMissingEntityClass",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#allowsNestedFieldReferencesAsGroupIdsInGroupExpressions",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#shouldThrowExceptionIfUnknownFieldIsReferencedInArithmenticExpressionsInProjection",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#stringExpressionsInProjectionExample",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#shouldAllowGroupingByAliasedFieldDefinedInFormerAggregationStage",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#shouldAllowGroupByIdFields",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#shouldHonorFieldAliasesForFieldReferences",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#shouldHandleMissingAggregationPipeline",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#shouldSupportReturningCurrentAggregationRootInReference",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#shouldDetectResultMismatch",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#returnFiveMostCommonLikesShouldReturnStageExecutionInformationWithExplainOptionEnabled",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#findStatesWithPopulationOver10MillionAggregationExample",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#shouldPerformDateProjectionOperatorsCorrectly",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#referencesToGroupIdsShouldBeRenderedProperly",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#shouldGroupByAndLookupPeopleCorectly",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#shouldSupportGeoNearQueriesForAggregationWithDistanceField",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#shouldHandleMissingInputCollection",
        "org.springframework.data.mongodb.core.aggregation.AggregationTests#shouldAggregateEmptyCollection"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 62
    },
    {
      "className": "org.springframework.data.mongodb.config.AuditingViaJavaConfigRepositoriesTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.config.AuditingViaJavaConfigRepositoriesTests#basicAuditing",
        "org.springframework.data.mongodb.config.AuditingViaJavaConfigRepositoriesTests#auditingUsesFallbackMappingContextIfNoneConfiguredWithRepositories",
        "org.springframework.data.mongodb.config.AuditingViaJavaConfigRepositoriesTests#auditingUsesFallbackMappingContextIfNoneConfigured"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "org.springframework.data.mongodb.core.MongoTemplateMappingTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.MongoTemplateMappingTests#insertsEntityCorrectly2",
        "org.springframework.data.mongodb.core.MongoTemplateMappingTests#insertsEntityCorrectly1"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreatorIntegrationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreatorIntegrationTests#createsIndexForConfiguredMappingContextOnly",
        "org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreatorIntegrationTests#org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreatorIntegrationTests",
        "org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreatorIntegrationTests#createIndexShouldThrowMeaningfulExceptionWhenIndexCreationFails",
        "org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreatorIntegrationTests#shouldHonorIndexedPropertiesWithRecursiveMappings"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 4
    },
    {
      "className": "org.springframework.data.mongodb.repository.PersonRepositoryLazyLoadingIntegrationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.repository.PersonRepositoryLazyLoadingIntegrationTests#shouldLoadAssociationWithDbRefOnConcreteDomainClassAndLazyLoadingEnabled",
        "org.springframework.data.mongodb.repository.PersonRepositoryLazyLoadingIntegrationTests#shouldLoadAssociationWithDbRefOnInterfaceAndLazyLoadingEnabled",
        "org.springframework.data.mongodb.repository.PersonRepositoryLazyLoadingIntegrationTests#shouldLoadAssociationWithDbRefOnConcreteCollectionAndLazyLoadingEnabled"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#shouldInsertSingle",
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#findAllByExampleShouldLookUpEntriesCorrectlyWhenUsingPartialNestedObject",
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#deleteByIdFromCustomCollectionName",
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#findByExampleShouldLookUpEntriesCorrectly",
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#findAllByExampleShouldLookUpEntriesCorrectlyWhenUsingNestedObjectInStrictMode",
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#deleteFromCustomCollectionName",
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#shouldInsertMultipleFromList",
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#countByExampleShouldLookUpEntriesCorrectly",
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#findAllByExampleShouldResolveGeoJsonCoordinatesCorrectly",
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#findALlFromCustomCollectionName",
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#findAllByExampleShouldResolveLegacyCoordinatesCorrectly",
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#findAllByExampleShouldResolveDbRefCorrectly",
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#findOneFromCustomCollectionName",
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#shouldInsertMutlipleFromSet",
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#findAllByExampleShouldNotFindEntriesWhenUsingPartialNestedObjectInStrictMode",
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#existsByExampleShouldLookUpEntriesCorrectly",
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#findAllByExampleShouldLookUpEntriesCorrectly",
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#findAllByExampleShouldProcessInheritanceCorrectly",
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#findAllByExampleShouldLookUpEntriesCorrectlyWhenUsingNestedObject",
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#findAllByExampleShouldRespectStringMatchMode",
        "org.springframework.data.mongodb.repository.support.SimpleMongoRepositoryTests#findOneByExampleShouldLookUpEntriesCorrectly"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 21
    },
    {
      "className": "org.springframework.data.mongodb.core.geo.GeoJsonTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.geo.GeoJsonTests#nearSphere",
        "org.springframework.data.mongodb.core.geo.GeoJsonTests#shouleSaveAndRetrieveDocumentWithGeoJsonLineStringTypeCorrectly",
        "org.springframework.data.mongodb.core.geo.GeoJsonTests#shouldConvertLineStringRepresentationCorrectlyWhenSourceCoordinatesUsesInteger",
        "org.springframework.data.mongodb.core.geo.GeoJsonTests#shouldConvertPointRepresentationCorrectlyWhenSourceCoordinatesUsesInteger",
        "org.springframework.data.mongodb.core.geo.GeoJsonTests#nearWithMinAndMaxDistance",
        "org.springframework.data.mongodb.core.geo.GeoJsonTests#shouleSaveAndRetrieveDocumentWithGeoJsonMultiLineStringTypeCorrectly",
        "org.springframework.data.mongodb.core.geo.GeoJsonTests#shouleSaveAndRetrieveDocumentWithGeoJsonMultiPointTypeCorrectly",
        "org.springframework.data.mongodb.core.geo.GeoJsonTests#shouleSaveAndRetrieveDocumentWithGeoJsonGeometryCollectionTypeCorrectly",
        "org.springframework.data.mongodb.core.geo.GeoJsonTests#shouleSaveAndRetrieveDocumentWithGeoJsonMultiPolygonTypeCorrectly",
        "org.springframework.data.mongodb.core.geo.GeoJsonTests#shouleSaveAndRetrieveDocumentWithGeoJsonPointTypeCorrectly",
        "org.springframework.data.mongodb.core.geo.GeoJsonTests#withinPolygon",
        "org.springframework.data.mongodb.core.geo.GeoJsonTests#shouleSaveAndRetrieveDocumentWithGeoJsonPolygonTypeCorrectly",
        "org.springframework.data.mongodb.core.geo.GeoJsonTests#geoNear",
        "org.springframework.data.mongodb.core.geo.GeoJsonTests#nearWithMinDistance",
        "org.springframework.data.mongodb.core.geo.GeoJsonTests#nearSphereWithMinDistance",
        "org.springframework.data.mongodb.core.geo.GeoJsonTests#nearPoint"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 16
    },
    {
      "className": "org.springframework.data.mongodb.repository.ComplexIdRepositoryIntegrationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.repository.ComplexIdRepositoryIntegrationTests#composedAnnotationFindMetaShouldWorkWhenUsingComplexId",
        "org.springframework.data.mongodb.repository.ComplexIdRepositoryIntegrationTests#findAllShouldWorkWhenUsingComplexId",
        "org.springframework.data.mongodb.repository.ComplexIdRepositoryIntegrationTests#findOneShouldWorkWhenUsingComplexId",
        "org.springframework.data.mongodb.repository.ComplexIdRepositoryIntegrationTests#composedAnnotationFindQueryShouldWorkWhenUsingComplexId",
        "org.springframework.data.mongodb.repository.ComplexIdRepositoryIntegrationTests#annotatedFindQueryShouldWorkWhenUsingComplexIdWithinCollection",
        "org.springframework.data.mongodb.repository.ComplexIdRepositoryIntegrationTests#annotatedFindQueryShouldWorkWhenUsingComplexId"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    },
    {
      "className": "org.springframework.data.mongodb.core.geo.GeoSpatial2DSphereTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.geo.GeoSpatial2DSphereTests#withinCenter",
        "org.springframework.data.mongodb.core.geo.GeoSpatial2DSphereTests#nearSphere",
        "org.springframework.data.mongodb.core.geo.GeoSpatial2DSphereTests#nearSphereWithMinDistance",
        "org.springframework.data.mongodb.core.geo.GeoSpatial2DSphereTests#geoNear",
        "org.springframework.data.mongodb.core.geo.GeoSpatial2DSphereTests#withinPolygon",
        "org.springframework.data.mongodb.core.geo.GeoSpatial2DSphereTests#withinBox",
        "org.springframework.data.mongodb.core.geo.GeoSpatial2DSphereTests#geoNearWithMinDistance",
        "org.springframework.data.mongodb.core.geo.GeoSpatial2DSphereTests#indexInfoIsCorrect",
        "org.springframework.data.mongodb.core.geo.GeoSpatial2DSphereTests#mapsQueryContainedInNearQuery",
        "org.springframework.data.mongodb.core.geo.GeoSpatial2DSphereTests#withinCenterSphere"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 10
    },
    {
      "className": "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests",
      "failingMethods": [
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#shouldExecuteFindOnDbRefCorrectly"
      ],
      "erroringMethods": [
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findByFirstNameIgnoreCaseWithNull",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#deleteByUsingAnnotatedQueryShouldReturnNumberOfDocumentsRemovedIfReturnTypeIsLong",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findByNestedPropertyInCollectionShouldFindMatchingDocuments",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#executesGeoPageQueryForWithPageRequestForPageInBetween",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPagedPersons",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPeopleByLocationWithinPolygon",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPersonsByFirstnameAsArray",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#executesDerivedCountProjection",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#deleteByUsingAnnotatedQueryShouldReturnListOfDeletedElementsWhenRetunTypeIsCollectionLike",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPeopleByLastnameAndOrdersCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#deleteByShouldReturnEmptyListInCaseNoDocumentHasBeenRemovedAndReturnTypeIsCollectionLike",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPeopleByzipCodePredicate",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#executesGeoPageQueryForWithPageRequestForJustOneElement",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findByExampleShouldResolveStuffCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#shouldNotLimitPagedQueryWhenPageRequestWithinBounds",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#shouldFindByFirstnameForSpELExpressionWithParameterVariableOnly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#shouldLimitPagedQueryWhenPageRequestExceedsUpperBoundary",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#shouldSupportSortingByQueryDslOrderSpecifier",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#executesQueryWithDBRefReferenceCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#existsWorksCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#executesGeoNearQueryForResultsCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findByFirstnameNotIgnoreCase",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#executesPagedFinderWithAnnotatedQueryCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#bindsDateParameterForLessThanPredicateCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#executesDerivedCountProjectionToInt",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#executesGeoPageQueryForWithPageRequestForPageAtTheEnd",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPeopleByZipCode",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#considersSortForAnnotatedQuery",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#bindsDateParameterToBeforePredicateCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#shouldSupportSortingWithQSortByQueryDslOrderSpecifier",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPersonByShippingAddressesCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#executesGeoPageQueryForResultsCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#executesAnnotatedCountProjection",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPeopleUsingNotPredicate",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsSliceOfPersons",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#shouldBindPlaceholdersUsedAsKeysCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findUsingAnnotatedQueryOnDBRef",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#gettingNonFirstPageWorksWithoutLimitBeingSet",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPeopleBySexPaginated",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findByFirstNameIgnoreCase",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPersonsByFirstnameNotContains",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPersonInAgeRangeCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#executesSingleEntityQueryWithProjectionCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsAllWithGivenIds",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findByCustomQueryLastnameAndStreetInList",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#shouldFindPersonsWhenUsingQueryDslPerdicatedOnIdProperty",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#shouldSupportSortingWithQSort",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#executesDerivedStartsWithQueryCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPersonById",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#rejectsDuplicateEmailAddressOnSave",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPeopleBySexCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findAllByExampleShouldResolveStuffCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#shouldLimitCollectionQueryToMaxResultsWhenPresent",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#deleteByShouldReturnZeroInCaseNoDocumentHasBeenRemovedAndReturnTypeIsNumber",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPeopleByQueryDslLastnameSpec",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPeopleByNamedQuery",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#deleteByShouldReturnListOfDeletedElementsWhenRetunTypeIsCollectionLike",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#bindsDateParameterForAfterPredicateCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findByFirstnameLikeWithNull",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#deleteByShouldRemoveElementsMatchingDerivedQuery",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findByCustomQueryFirstnamesInListAndLastname",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#executesPagedFinderCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#deleteByShouldReturnNumberOfDocumentsRemovedIfReturnTypeIsLong",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#bindsDateParameterForGreaterThanPredicateCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findByFirstnameEndingWithIgnoreCase",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#appliesStaticAndDynamicSorting",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findBySkillsContains",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#deleteByUsingAnnotatedQueryShouldRemoveElementsMatchingDerivedQuery",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsAllMusicians",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#returnsOrderedResultsForQuerydslOrderSpecifier",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPeopleByLocationWithinCircle",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPersonByAddressCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#deletesPersonCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#executesDerivedEndsWithQueryCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#shouldReturnEmptyWhenPageRequestedPageIsTotallyOutOfScopeForLimit",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPersonsByLastname",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPeopleByLocationNearUsingGeoJsonType",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#executesGeoPageQueryForWithPageRequestForJustOneElementEmptyPage",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findByFirstnameContainingIgnoreCase",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#shouldFindByFirstnameAndCurrentUserWithCustomQuery",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPersonsByFirstname",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPeopleByLocationNear",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#sliceShouldTraverseElementsWithoutSkippingOnes",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#deletesPersonByIdCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#executesAndQueryCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPeopleByLocationWithinBox",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#shouldAllowReturningJava8StreamInCustomQuery",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPagedPeopleByPredicate",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findByFirstnameStartingWithIgnoreCase",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#executesGeoNearQueryForResultsCorrectlyWhenGivenMinAndMaxDistance",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#bindsDateParameterForManuallyDefinedQueryCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#shouldFindByFirstnameForSpELExpressionWithParameterIndexOnly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#readsDocumentsWithNestedPolymorphismCorrectly",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findBySkillsNotContains",
        "org.springframework.data.mongodb.repository.PersonRepositoryIntegrationTests#findsPersonsByFirstnameLike"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "skipped",
          "failureDetail": "skipped",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 1,
      "nbErrors": 95
    },
    {
      "className": "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests",
      "failingMethods": [
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldExecuteFindOnDbRefCorrectly"
      ],
      "erroringMethods": [
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPersonByShippingAddressesCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByFirstNameIgnoreCase",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#bindsDateParameterForLessThanPredicateCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#exposesPersistentEntity",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldSupportSortingWithQSort",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleByLocationWithinBox",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesGeoPageQueryForWithPageRequestForPageInBetween",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPersonsByFirstnameAsArray",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPersonInAgeRangeCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldNotLimitPagedQueryWhenPageRequestWithinBounds",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#assertDefaultMappingContextIsWired",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleByNamedQuery",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldFindByFirstnameAndCurrentUserWithCustomQuery",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deleteByUsingAnnotatedQueryShouldReturnListOfDeletedElementsWhenRetunTypeIsCollectionLike",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesGeoPageQueryForWithPageRequestForJustOneElement",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesPagedFinderWithAnnotatedQueryCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deleteByUsingAnnotatedQueryShouldReturnNumberOfDocumentsRemovedIfReturnTypeIsLong",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesDerivedEndsWithQueryCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#bindsDateParameterForManuallyDefinedQueryCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#existsWorksCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsSliceOfPersons",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleByLocationNear",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesGeoPageQueryForResultsCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deleteByShouldReturnListOfDeletedElementsWhenRetunTypeIsCollectionLike",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#gettingNonFirstPageWorksWithoutLimitBeingSet",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deletesPersonCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#rejectsDuplicateEmailAddressOnSave",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleByLocationWithinCircle",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleByLocationNearUsingGeoJsonType",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#appliesStaticAndDynamicSorting",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByExampleShouldResolveStuffCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deleteByUsingAnnotatedQueryShouldRemoveElementsMatchingDerivedQuery",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#returnsOrderedResultsForQuerydslOrderSpecifier",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesGeoPageQueryForWithPageRequestForJustOneElementEmptyPage",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#considersSortForAnnotatedQuery",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByCustomQueryLastnameAndStreetInList",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#bindsDateParameterToBeforePredicateCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldLimitCollectionQueryToMaxResultsWhenPresent",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesQueryWithDBRefReferenceCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleByLastnameAndOrdersCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleByQueryDslLastnameSpec",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPersonByAddressCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPersonsByFirstnameNotContains",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldReturnEmptyWhenPageRequestedPageIsTotallyOutOfScopeForLimit",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deleteByShouldReturnZeroInCaseNoDocumentHasBeenRemovedAndReturnTypeIsNumber",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesAnnotatedCountProjection",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findBySkillsContains",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByCustomQueryFirstnamesInListAndLastname",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesGeoPageQueryForWithPageRequestForPageAtTheEnd",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesDerivedCountProjectionToInt",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#bindsDateParameterForGreaterThanPredicateCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesDerivedCountProjection",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesSingleEntityQueryWithProjectionCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldFindByFirstnameForSpELExpressionWithParameterVariableOnly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPagedPersons",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesDerivedStartsWithQueryCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldBindPlaceholdersUsedAsKeysCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldSupportSortingWithQSortByQueryDslOrderSpecifier",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findBySkillsNotContains",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesAndQueryCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPersonsByLastname",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPersonById",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesPagedFinderCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByFirstnameStartingWithIgnoreCase",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleBySexPaginated",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldFindPersonsWhenUsingQueryDslPerdicatedOnIdProperty",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldAllowReturningJava8StreamInCustomQuery",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByNestedPropertyInCollectionShouldFindMatchingDocuments",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByFirstNameIgnoreCaseWithNull",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#bindsDateParameterForAfterPredicateCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByFirstnameEndingWithIgnoreCase",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findAllByExampleShouldResolveStuffCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPersonsByFirstname",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldFindByFirstnameForSpELExpressionWithParameterIndexOnly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleByZipCode",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByFirstnameContainingIgnoreCase",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByFirstnameLikeWithNull",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsAllMusicians",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findByFirstnameNotIgnoreCase",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldSupportSortingByQueryDslOrderSpecifier",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deleteByShouldReturnNumberOfDocumentsRemovedIfReturnTypeIsLong",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleBySexCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesGeoNearQueryForResultsCorrectlyWhenGivenMinAndMaxDistance",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#sliceShouldTraverseElementsWithoutSkippingOnes",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#readsDocumentsWithNestedPolymorphismCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findUsingAnnotatedQueryOnDBRef",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#executesGeoNearQueryForResultsCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPagedPeopleByPredicate",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPersonsByFirstnameLike",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsAllWithGivenIds",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deleteByShouldRemoveElementsMatchingDerivedQuery",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleByLocationWithinPolygon",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deletesPersonByIdCorrectly",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleByzipCodePredicate",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#findsPeopleUsingNotPredicate",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#deleteByShouldReturnEmptyListInCaseNoDocumentHasBeenRemovedAndReturnTypeIsCollectionLike",
        "org.springframework.data.mongodb.repository.config.MongoNamespaceIntegrationTests#shouldLimitPagedQueryWhenPageRequestExceedsUpperBoundary"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "skipped",
          "failureDetail": "skipped",
          "isError": false
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 1,
      "nbErrors": 97
    },
    {
      "className": "org.springframework.data.mongodb.core.temp.QueryByExampleTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.temp.QueryByExampleTests#findByExampleShouldReturnEmptyListIfNotMatching",
        "org.springframework.data.mongodb.core.temp.QueryByExampleTests#findByExampleShouldWorkForSimpleProperty",
        "org.springframework.data.mongodb.core.temp.QueryByExampleTests#findByExampleShouldReturnEverythingWhenSampleIsEmpty",
        "org.springframework.data.mongodb.core.temp.QueryByExampleTests#findByExampleShouldWorkForMultipleProperties",
        "org.springframework.data.mongodb.core.temp.QueryByExampleTests#findByExampleShouldWorkForIdProperty",
        "org.springframework.data.mongodb.core.temp.QueryByExampleTests#findByExampleWithCriteria"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 6
    },
    {
      "className": "org.springframework.data.mongodb.repository.support.QuerydslRepositorySupportTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.repository.support.QuerydslRepositorySupportTests#providesMongoQuery",
        "org.springframework.data.mongodb.repository.support.QuerydslRepositorySupportTests#shouldAllowAny"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.springframework.data.mongodb.core.mapping.event.ValidatingMongoEventListenerTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.mapping.event.ValidatingMongoEventListenerTests#shouldThrowConstraintViolationException",
        "org.springframework.data.mongodb.core.mapping.event.ValidatingMongoEventListenerTests#shouldNotThrowAnyExceptions"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.springframework.data.mongodb.repository.ContactRepositoryIntegrationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.repository.ContactRepositoryIntegrationTests#readsAndWritesContactCorrectly",
        "org.springframework.data.mongodb.repository.ContactRepositoryIntegrationTests#findsContactByTypedExample"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.springframework.data.mongodb.config.MongoClientParserIntegrationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.config.MongoClientParserIntegrationTests#createsMongoClientWithDefaultsCorrectly"
      ],
      "failures": [
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.data.mongodb.core.MongoTemplateTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.MongoTemplateTests#sortOnAnnotatedFieldPropertyShouldBeMappedCorrectly",
        "org.springframework.data.mongodb.core.MongoTemplateTests#findAndModifyShouldAddTypeInformationWithinUpdatedTypeOnEmbeddedDocumentWithCollectionWhenUpdatingSecondElement",
        "org.springframework.data.mongodb.core.MongoTemplateTests#shouldBeAbleToUpdateDbRefPropertyWithDomainObject",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testUsingReadPreference",
        "org.springframework.data.mongodb.core.MongoTemplateTests#executeDocument",
        "org.springframework.data.mongodb.core.MongoTemplateTests#populatesIdsAddedByEventListener",
        "org.springframework.data.mongodb.core.MongoTemplateTests#sortOnIdFieldPropertyShouldBeMappedCorrectly",
        "org.springframework.data.mongodb.core.MongoTemplateTests#shouldAllowSavingOfLazyLoadedDbRefs",
        "org.springframework.data.mongodb.core.MongoTemplateTests#updatesDBRefsCorrectly",
        "org.springframework.data.mongodb.core.MongoTemplateTests#removesEntityWithAnnotatedIdIfIdNeedsMassaging",
        "org.springframework.data.mongodb.core.MongoTemplateTests#insertsSimpleEntityCorrectly",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testUsingAnOrQuery",
        "org.springframework.data.mongodb.core.MongoTemplateTests#findAndModifyShouldAddTypeInformationOnDocumentWithNestedCollectionObjectInsertedAtSecondIndex",
        "org.springframework.data.mongodb.core.MongoTemplateTests#ignoresNullElementsForInsertAll",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testFindAndUpdate",
        "org.springframework.data.mongodb.core.MongoTemplateTests#updatesObjectIdsCorrectly",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testUpdateShouldWorkForPathsOnInterfaceMethods",
        "org.springframework.data.mongodb.core.MongoTemplateTests#decimal128TypeShouldBeSavedAndLoadedCorrectly",
        "org.springframework.data.mongodb.core.MongoTemplateTests#nullsValuesForUpdatesOfUnversionedEntity",
        "org.springframework.data.mongodb.core.MongoTemplateTests#removesObjectFromExplicitCollection",
        "org.springframework.data.mongodb.core.MongoTemplateTests#initializesVersionOnBatchInsert",
        "org.springframework.data.mongodb.core.MongoTemplateTests#findsEntityByDateReference",
        "org.springframework.data.mongodb.core.MongoTemplateTests#insertsAndRemovesBasicDbObjectCorrectly",
        "org.springframework.data.mongodb.core.MongoTemplateTests#resolvesCyclicDBRefCorrectly",
        "org.springframework.data.mongodb.core.MongoTemplateTests#doesNotFailOnInsertForEntityWithNonAutogeneratableId",
        "org.springframework.data.mongodb.core.MongoTemplateTests#shouldRespectParamterValueWhenAttemptingToReuseLazyLoadedDBRefUsedInPersistenceConstrcutor",
        "org.springframework.data.mongodb.core.MongoTemplateTests#initializesVersionOnInsert",
        "org.springframework.data.mongodb.core.MongoTemplateTests#queryShouldSupportRealAndAliasedPropertyNamesForFieldInclusions",
        "org.springframework.data.mongodb.core.MongoTemplateTests#queryShouldSupportNestedPropertyNamesForFieldInclusions",
        "org.springframework.data.mongodb.core.MongoTemplateTests#findAndModifyShouldRetainTypeInformationWithinUpdatedTypeOnDocumentWithNestedCollectionWhenWholeCollectionIsReplaced",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testUsingAnInQueryWithLongId",
        "org.springframework.data.mongodb.core.MongoTemplateTests#countRejectsNullEntityClass",
        "org.springframework.data.mongodb.core.MongoTemplateTests#returnsEntityWhenQueryingForDateTime",
        "org.springframework.data.mongodb.core.MongoTemplateTests#findOneAfterUpsertForNonExistingObjectReturnsTheInsertedObject",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testUsingAnInQueryWithStringId",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testUsingAnInQueryWithPrimitiveIntId",
        "org.springframework.data.mongodb.core.MongoTemplateTests#allowInsertWithPlainJsonString",
        "org.springframework.data.mongodb.core.MongoTemplateTests#countAndFindWithoutTypeInformation",
        "org.springframework.data.mongodb.core.MongoTemplateTests#shouldRetrieveInitializedValueFromDbRefAssociationAfterLoad",
        "org.springframework.data.mongodb.core.MongoTemplateTests#storesAndRemovesTypeWithComplexId",
        "org.springframework.data.mongodb.core.MongoTemplateTests#throwsExceptionForDuplicateIds",
        "org.springframework.data.mongodb.core.MongoTemplateTests#findAndModifyShouldAddTypeInformationWithinUpdatedTypeOnDocumentWithNestedLists",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testFindAndRemove",
        "org.springframework.data.mongodb.core.MongoTemplateTests#updatesShouldRetainTypeInformationEvenForCollections",
        "org.springframework.data.mongodb.core.MongoTemplateTests#shouldReuseExistingDBRefInQueryFromDbRefAssociationAfterLoad",
        "org.springframework.data.mongodb.core.MongoTemplateTests#updateWithPullShouldRemoveNestedItemFromDbRefAnnotatedCollection",
        "org.springframework.data.mongodb.core.MongoTemplateTests#executesQueryWithNegatedRegexCorrectly",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testUsingRegexQueryWithOptions",
        "org.springframework.data.mongodb.core.MongoTemplateTests#removingNullIsANoOp",
        "org.springframework.data.mongodb.core.MongoTemplateTests#rejectsNonJsonStringForSave",
        "org.springframework.data.mongodb.core.MongoTemplateTests#executesExistsCorrectly",
        "org.springframework.data.mongodb.core.MongoTemplateTests#doesNotFailOnVersionInitForUnversionedEntity",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testFindAllAndRemoveFullyReturnsAndRemovesDocuments",
        "org.springframework.data.mongodb.core.MongoTemplateTests#writesPlainString",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testUsingAnInQueryWithObjectId",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testFindAndUpdateUpsert",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testReadIndexInfoForIndicesCreatedViaMongoShellCommands",
        "org.springframework.data.mongodb.core.MongoTemplateTests#rejectsPlainObjectWithOutExplicitCollection",
        "org.springframework.data.mongodb.core.MongoTemplateTests#savesJsonStringCorrectly",
        "org.springframework.data.mongodb.core.MongoTemplateTests#itShouldBePossibleToReuseAnExistingQuery",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testShouldSupportQueryWithIncludedDbRefField",
        "org.springframework.data.mongodb.core.MongoTemplateTests#updateMultiShouldIncreaseVersionOfAllUpdatedEntities",
        "org.springframework.data.mongodb.core.MongoTemplateTests#updateConsidersMappingAnnotations",
        "org.springframework.data.mongodb.core.MongoTemplateTests#updateShouldWorkForTypesContainingGeoJsonTypes",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testRemovingDocument",
        "org.springframework.data.mongodb.core.MongoTemplateTests#rejectsDuplicateIdInInsertAll",
        "org.springframework.data.mongodb.core.MongoTemplateTests#takesLimitIntoAccountWhenStreaming",
        "org.springframework.data.mongodb.core.MongoTemplateTests#countsDocumentsCorrectly",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testUsingAnInQueryWithBigIntegerId",
        "org.springframework.data.mongodb.core.MongoTemplateTests#updateMultiShouldAddValuesCorrectlyWhenUsingPushEachWithComplexTypes",
        "org.springframework.data.mongodb.core.MongoTemplateTests#aQueryRestrictedWithOneRestrictedResultTypeShouldReturnOnlyInstancesOfTheRestrictedType",
        "org.springframework.data.mongodb.core.MongoTemplateTests#findAndModifyAddToSetWithEachShouldNotAddDuplicatesNorTypeHintForSimpleDocuments",
        "org.springframework.data.mongodb.core.MongoTemplateTests#findMultipleWithQueryShouldSupportRealAndAliasedPropertyNamesForFieldExclusions",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testUpdateShouldAllowMultiplePushAll",
        "org.springframework.data.mongodb.core.MongoTemplateTests#optimisticLockingHandlingWithExistingId",
        "org.springframework.data.mongodb.core.MongoTemplateTests#findAndModifyShouldAddTypeInformationWithinUpdatedTypeOnEmbeddedDocumentWithCollectionWhenRewriting",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testFindOneWithSort",
        "org.springframework.data.mongodb.core.MongoTemplateTests#shouldReuseAlreadyResolvedLazyLoadedDBRefWhenUsedAsPersistenceConstrcutorArgument",
        "org.springframework.data.mongodb.core.MongoTemplateTests#updateWithPullShouldRemoveNestedItemFromDbRefAnnotatedCollectionWhenGivenAnIdValueOfComponentTypeEntity",
        "org.springframework.data.mongodb.core.MongoTemplateTests#findAndModifyShouldRetrainTypeInformationWithinUpdatedType",
        "org.springframework.data.mongodb.core.MongoTemplateTests#updatesShouldRetainTypeInformation",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testUsingUpdateWithMultipleSet",
        "org.springframework.data.mongodb.core.MongoTemplateTests#optimisticLockingHandling",
        "org.springframework.data.mongodb.core.MongoTemplateTests#exceutesBasicQueryCorrectly",
        "org.springframework.data.mongodb.core.MongoTemplateTests#correctlySetsLongVersionProperty",
        "org.springframework.data.mongodb.core.MongoTemplateTests#updateMultiShouldAddValuesCorrectlyWhenUsingPushEachWithSimpleTypes",
        "org.springframework.data.mongodb.core.MongoTemplateTests#readsPlainDbObjectById",
        "org.springframework.data.mongodb.core.MongoTemplateTests#throwsExceptionForIndexViolationIfConfigured",
        "org.springframework.data.mongodb.core.MongoTemplateTests#savesMongoPrimitiveObjectCorrectly",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testAddingToList",
        "org.springframework.data.mongodb.core.MongoTemplateTests#takesSortIntoAccountWhenStreaming",
        "org.springframework.data.mongodb.core.MongoTemplateTests#versionsObjectIntoDedicatedCollection",
        "org.springframework.data.mongodb.core.MongoTemplateTests#callingNonObjectMethodsOnLazyLoadingProxyShouldReturnNullIfUnderlyingDbrefWasDeletedInbetween",
        "org.springframework.data.mongodb.core.MongoTemplateTests#updateFirstShouldDoNothingWhenCalledForEntitiesThatDoNotExist",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testEnsureIndex",
        "org.springframework.data.mongodb.core.MongoTemplateTests#aQueryRestrictedWithMultipleRestrictedResultTypesShouldReturnOnlyInstancesOfTheRestrictedTypes",
        "org.springframework.data.mongodb.core.MongoTemplateTests#updateFirstShouldIncreaseVersionOnlyForFirstMatchingEntity",
        "org.springframework.data.mongodb.core.MongoTemplateTests#findAndModifyShouldRetainTypeInformationWithinUpdatedTypeOnEmbeddedDocumentWithCollectionWhenUpdatingPositionedElement",
        "org.springframework.data.mongodb.core.MongoTemplateTests#aQueryWithNoRestrictedResultTypesShouldReturnAllInstancesWithinTheGivenCollection",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testUsingInQueryWithList",
        "org.springframework.data.mongodb.core.MongoTemplateTests#findAndModifyShouldRetainTypeInformationWithinUpdatedTypeOnDocumentWithNestedCollectionWhenFirstElementIsReplaced",
        "org.springframework.data.mongodb.core.MongoTemplateTests#removesEntityFromCollection",
        "org.springframework.data.mongodb.core.MongoTemplateTests#queryShouldSupportRealAndAliasedPropertyNamesForFieldExclusions",
        "org.springframework.data.mongodb.core.MongoTemplateTests#savesPlainDbObjectCorrectly",
        "org.springframework.data.mongodb.core.MongoTemplateTests#countRejectsEmptyCollectionName",
        "org.springframework.data.mongodb.core.MongoTemplateTests#rejectsNullObjectToBeSaved",
        "org.springframework.data.mongodb.core.MongoTemplateTests#shouldExecuteQueryShouldMapQueryBeforeQueryExecution",
        "org.springframework.data.mongodb.core.MongoTemplateTests#queryCantBeNull",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testProperHandlingOfDifferentIdTypesWithMappingMongoConverter",
        "org.springframework.data.mongodb.core.MongoTemplateTests#nullsPropertiesForVersionObjectUpdates",
        "org.springframework.data.mongodb.core.MongoTemplateTests#updateMultiShouldAddValuesCorrectlyWhenUsingAddToSetWithEach",
        "org.springframework.data.mongodb.core.MongoTemplateTests#updateFirstShouldIncreaseVersionForVersionedEntity",
        "org.springframework.data.mongodb.core.MongoTemplateTests#executeDocumentWithCursorPreparer",
        "org.springframework.data.mongodb.core.MongoTemplateTests#bogusUpdateDoesNotTriggerException",
        "org.springframework.data.mongodb.core.MongoTemplateTests#countRejectsNullCollectionName",
        "org.springframework.data.mongodb.core.MongoTemplateTests#testWriteConcernResolver",
        "org.springframework.data.mongodb.core.MongoTemplateTests#shouldNotReuseLazyLoadedDBRefWhenTypeUsedInPersistenceConstrcutorButValueRefersToAnotherProperty",
        "org.springframework.data.mongodb.core.MongoTemplateTests#savingAndReassigningLazyLoadingProxies",
        "org.springframework.data.mongodb.core.MongoTemplateTests#throwsExceptionForUpdateWithInvalidPushOperator",
        "org.springframework.data.mongodb.core.MongoTemplateTests#updateShouldNotBumpVersionNumberIfVersionPropertyIncludedInUpdate",
        "org.springframework.data.mongodb.core.MongoTemplateTests#preventsDuplicateInsert"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 242
    },
    {
      "className": "org.springframework.data.mongodb.core.DefaultIndexOperationsIntegrationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.DefaultIndexOperationsIntegrationTests#shouldApplyPartialFilterCorrectly",
        "org.springframework.data.mongodb.core.DefaultIndexOperationsIntegrationTests#shouldFavorExplicitMappingHintViaClass",
        "org.springframework.data.mongodb.core.DefaultIndexOperationsIntegrationTests#getIndexInfoShouldBeAbleToRead2dsphereIndex",
        "org.springframework.data.mongodb.core.DefaultIndexOperationsIntegrationTests#shouldApplyPartialFilterWithMappedPropertyCorrectly",
        "org.springframework.data.mongodb.core.DefaultIndexOperationsIntegrationTests#shouldApplyPartialDBOFilterCorrectly"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 5
    },
    {
      "className": "org.springframework.data.mongodb.core.MongoAdminIntegrationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.MongoAdminIntegrationTests#serverStats"
      ],
      "failures": [
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.data.mongodb.monitor.MongoMonitorIntegrationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.monitor.MongoMonitorIntegrationTests#operationCounters",
        "org.springframework.data.mongodb.monitor.MongoMonitorIntegrationTests#getHostNameShouldReturnServerNameReportedByMongo",
        "org.springframework.data.mongodb.monitor.MongoMonitorIntegrationTests#serverInfo"
      ],
      "failures": [
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "org.springframework.data.mongodb.core.NoExplicitIdTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.NoExplicitIdTests#saveAndRetrieveTypeWithoutIdPorpertyViaRepositoryFindOne",
        "org.springframework.data.mongodb.core.NoExplicitIdTests#saveAndRetrieveTypeWithoutIdPorpertyViaTemplate",
        "org.springframework.data.mongodb.core.NoExplicitIdTests#saveAndRetrieveTypeWithoutIdPorpertyViaRepository"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 3
    },
    {
      "className": "org.springframework.data.mongodb.repository.support.QueryDslMongoRepositoryIntegrationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.repository.support.QueryDslMongoRepositoryIntegrationTests#shouldSupportFindAllWithPredicateAndSort",
        "org.springframework.data.mongodb.repository.support.QueryDslMongoRepositoryIntegrationTests#shouldSupportExistsWithPredicate"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.springframework.data.mongodb.core.DefaultScriptOperationsTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.DefaultScriptOperationsTests#existsShouldReturnFalseIfScriptNotAvailableOnServer",
        "org.springframework.data.mongodb.core.DefaultScriptOperationsTests#saveShouldStoreCallableScriptCorrectly",
        "org.springframework.data.mongodb.core.DefaultScriptOperationsTests#callShouldThrowExceptionWhenCallingScriptThatDoesNotExist",
        "org.springframework.data.mongodb.core.DefaultScriptOperationsTests#saveShouldStoreExecutableScriptCorrectly",
        "org.springframework.data.mongodb.core.DefaultScriptOperationsTests#scriptNamesShouldReturnEmptySetWhenNoScriptRegistered",
        "org.springframework.data.mongodb.core.DefaultScriptOperationsTests#executeShouldDirectlyRunExecutableMongoScript",
        "org.springframework.data.mongodb.core.DefaultScriptOperationsTests#scriptNamesShouldContainNameOfRegisteredScript",
        "org.springframework.data.mongodb.core.DefaultScriptOperationsTests#callShouldExecuteExistingScript",
        "org.springframework.data.mongodb.core.DefaultScriptOperationsTests#executeShouldNotQuoteStrings",
        "org.springframework.data.mongodb.core.DefaultScriptOperationsTests#executeShouldRunCallableScriptThatHasBeenSavedBefore",
        "org.springframework.data.mongodb.core.DefaultScriptOperationsTests#existsShouldReturnTrueIfScriptAvailableOnServer"
      ],
      "failures": [
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 11
    },
    {
      "className": "org.springframework.data.mongodb.core.convert.MongoConvertersIntegrationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.convert.MongoConvertersIntegrationTests#writesUUIDBinaryCorrectly"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 1
    },
    {
      "className": "org.springframework.data.mongodb.core.mapping.event.ApplicationContextEventTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.mapping.event.ApplicationContextEventTests#loadEventsOnAggregation",
        "org.springframework.data.mongodb.core.mapping.event.ApplicationContextEventTests#deleteEvents",
        "org.springframework.data.mongodb.core.mapping.event.ApplicationContextEventTests#beforeSaveEvent",
        "org.springframework.data.mongodb.core.mapping.event.ApplicationContextEventTests#loadAndConvertEvents"
      ],
      "failures": [
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "org.springframework.data.mongodb.repository.config.MongoRepositoriesRegistrarIntegrationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.repository.config.MongoRepositoriesRegistrarIntegrationTests#testConfiguration",
        "org.springframework.data.mongodb.repository.config.MongoRepositoriesRegistrarIntegrationTests#registersTypePredictingPostProcessor"
      ],
      "failures": [
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        },
        {
          "failureName": "java.lang.IllegalStateException",
          "failureDetail": "Failed to load ApplicationContext",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.springframework.data.mongodb.config.MongoNamespaceTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.config.MongoNamespaceTests#testSecondMongoDbFactory",
        "org.springframework.data.mongodb.config.MongoNamespaceTests#testThirdMongoDbFactory"
      ],
      "failures": [
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003dlocalhost:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003dlocalhost:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.springframework.data.mongodb.core.DefaultBulkOperationsIntegrationTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.DefaultBulkOperationsIntegrationTests#updateOneOrdered",
        "org.springframework.data.mongodb.core.DefaultBulkOperationsIntegrationTests#insertShouldConsiderInheritance",
        "org.springframework.data.mongodb.core.DefaultBulkOperationsIntegrationTests#insertOrdered",
        "org.springframework.data.mongodb.core.DefaultBulkOperationsIntegrationTests#rejectsNullMongoOperations",
        "org.springframework.data.mongodb.core.DefaultBulkOperationsIntegrationTests#updateMultiOrdered",
        "org.springframework.data.mongodb.core.DefaultBulkOperationsIntegrationTests#upsertDoesInsert",
        "org.springframework.data.mongodb.core.DefaultBulkOperationsIntegrationTests#upsertDoesUpdate",
        "org.springframework.data.mongodb.core.DefaultBulkOperationsIntegrationTests#removeOrdered",
        "org.springframework.data.mongodb.core.DefaultBulkOperationsIntegrationTests#removeUnordered",
        "org.springframework.data.mongodb.core.DefaultBulkOperationsIntegrationTests#updateMultiUnOrdered",
        "org.springframework.data.mongodb.core.DefaultBulkOperationsIntegrationTests#insertUnOrderedContinuesOnError",
        "org.springframework.data.mongodb.core.DefaultBulkOperationsIntegrationTests#insertUnOrdered",
        "org.springframework.data.mongodb.core.DefaultBulkOperationsIntegrationTests#rejectsEmptyCollectionName",
        "org.springframework.data.mongodb.core.DefaultBulkOperationsIntegrationTests#mixedBulkOrderedWithList",
        "org.springframework.data.mongodb.core.DefaultBulkOperationsIntegrationTests#rejectsNullCollectionName",
        "org.springframework.data.mongodb.core.DefaultBulkOperationsIntegrationTests#updateOneUnOrdered",
        "org.springframework.data.mongodb.core.DefaultBulkOperationsIntegrationTests#mixedBulkOrdered",
        "org.springframework.data.mongodb.core.DefaultBulkOperationsIntegrationTests#insertOrderedFails"
      ],
      "failures": [
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 18
    },
    {
      "className": "org.springframework.data.mongodb.core.geo.GeoSpatialIndexTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.geo.GeoSpatialIndexTests#test2dIndex",
        "org.springframework.data.mongodb.core.geo.GeoSpatialIndexTests#useGeneratedNameShouldGenerateAnIndexName",
        "org.springframework.data.mongodb.core.geo.GeoSpatialIndexTests#test2dSphereIndex",
        "org.springframework.data.mongodb.core.geo.GeoSpatialIndexTests#testHaystackIndex"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting for a server that matches AnyServerSelector{}. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 8
    },
    {
      "className": "org.springframework.data.mongodb.core.mapping.GeoIndexedTests",
      "failingMethods": [],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.mapping.GeoIndexedTests#testGeoLocation"
      ],
      "failures": [
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "com.mongodb.MongoTimeoutException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 0,
      "nbErrors": 2
    },
    {
      "className": "org.springframework.data.mongodb.core.mapreduce.MapReduceTests",
      "failingMethods": [
        "org.springframework.data.mongodb.core.mapreduce.MapReduceTests#testForDocs"
      ],
      "erroringMethods": [
        "org.springframework.data.mongodb.core.mapreduce.MapReduceTests#mapReduceShouldUseQueryMapper",
        "org.springframework.data.mongodb.core.mapreduce.MapReduceTests#testMapReduceInlineWithScope",
        "org.springframework.data.mongodb.core.mapreduce.MapReduceTests#testIssue260Part2",
        "org.springframework.data.mongodb.core.mapreduce.MapReduceTests#testMapReduceExcludeQuery",
        "org.springframework.data.mongodb.core.mapreduce.MapReduceTests#testMapReduceInline",
        "org.springframework.data.mongodb.core.mapreduce.MapReduceTests#testMapReduce",
        "org.springframework.data.mongodb.core.mapreduce.MapReduceTests#testIssue260",
        "org.springframework.data.mongodb.core.mapreduce.MapReduceTests#testMapReduceWithQuery"
      ],
      "failures": [
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "skipped",
          "failureDetail": "skipped",
          "isError": false
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        },
        {
          "failureName": "org.springframework.dao.DataAccessResourceFailureException",
          "failureDetail": "Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 10000 ms while waiting to connect. Client view of cluster state is {type\u003dUnknown, servers\u003d[{address\u003d127.0.0.1:27017, type\u003dUnknown, state\u003dConnecting, exception\u003d{com.mongodb.MongoException$Network: Exception opening the socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]",
          "isError": true
        }
      ],
      "nbFailures": 1,
      "nbErrors": 16
    }
  ],
  "bugRepo": "spring-projects/spring-data-mongodb"
}